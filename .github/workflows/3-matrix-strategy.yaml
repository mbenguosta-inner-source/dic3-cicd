name: Node.js CI and Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test

    strategy:
      matrix:
        environment: [dev, staging, prod]  # Define the environment matrix

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Use a specific Node.js version

      - name: Install dependencies
        run: npm install

      # Conditionally run ESLint only for the 'dev' environment
      - name: Run Lint
        if: matrix.environment == 'dev'
        run: npm run lint

      - name: Run Unit Tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    name: Build & Push

    needs: test

    strategy:
      matrix:
        environment: [dev, staging, prod]  # Define the environment matrix

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image for ${{ matrix.environment }}
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cicdapp:${{ matrix.environment }}-${{ github.sha }} .

      - name: Push Docker image for ${{ matrix.environment }}
        run: docker push ${{ secrets.DOCKER_USERNAME }}/cicdapp:${{ matrix.environment }}-${{ github.sha }}

      - name: Tag Docker image with 'latest' for ${{ matrix.environment }}
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/cicdapp:${{ matrix.environment }}-${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/cicdapp:${{ matrix.environment }}-latest
          docker push ${{ secrets.DOCKER_USERNAME }}/cicdapp:${{ matrix.environment }}-latest

